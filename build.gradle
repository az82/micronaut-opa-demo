buildscript {
    repositories {
        mavenCentral()
        maven { url "https://plugins.gradle.org/m2/" }
    }
    dependencies {
        classpath "com.github.jengelman.gradle.plugins:shadow:4.0.3"
        classpath "io.spring.gradle:dependency-management-plugin:1.0.9.RELEASE"
        classpath "net.ltgt.gradle:gradle-apt-plugin:0.21"
        classpath "gradle.plugin.com.google.cloud.tools:jib-gradle-plugin:2.1.0"
        classpath "gradle.plugin.com.github.lkishalmi.gatling:gradle-gatling-plugin:3.2.9"
    }
}


// Version = GIT commit
version 'git rev-parse HEAD'.execute().text
group "de.az.demo.mn.opa"


apply plugin: "io.spring.dependency-management"
apply plugin: "com.github.johnrengelman.shadow"
apply plugin: "application"
apply plugin: "groovy"
apply plugin: "net.ltgt.apt-eclipse"
apply plugin: "net.ltgt.apt-idea"
apply plugin: "com.google.cloud.tools.jib"
apply plugin: "com.github.lkishalmi.gatling"


repositories {
    mavenLocal()
    mavenCentral()
    maven { url "https://jcenter.bintray.com" }
}

dependencyManagement {
    imports {
        mavenBom 'io.micronaut:micronaut-bom:1.3.2'
    }
}

dependencies {
    annotationProcessor "io.micronaut:micronaut-inject-java"
    compile "io.micronaut:micronaut-http-client"
    compile "io.micronaut:micronaut-http-server-netty"
    compile "io.micronaut:micronaut-inject"
    compile "io.micronaut:micronaut-runtime"
    compile "io.micronaut:micronaut-management"
    compileOnly "io.micronaut:micronaut-inject-java"
    runtime "ch.qos.logback:logback-classic:1.2.3"
    testCompile "io.micronaut:micronaut-inject-groovy"
    testCompile("org.spockframework:spock-core:1.3-groovy-2.5") {
        exclude group: "org.codehaus.groovy", module: "groovy-all"
    }
    testCompile "com.github.tomakehurst:wiremock-standalone:2.26.2"
}

shadowJar {
    mergeServiceFiles()
}

jib {
    to {
        auth {
            // Credential helper for docker does not seem to work properly
            // Provide credentials using gradle.properties or environment variables
            username = findProperty('jibToAuthUsername') ?: System.getenv('JIB_TO_AUTH_USERNAME')
            password = findProperty('jibToAuthPassword') ?: System.getenv('JIB_TO_AUTH_PASSWORD')
        }
    }
    container {
        jvmFlags = ['-Xms32m', '-Xmx32m']
        ports = ['8080']
    }
}

run.jvmArgs('-noverify', '-XX:TieredStopAtLevel=1')

mainClassName = "de.az.demo.mn.opa.Application"
compileJava.options.compilerArgs += '-parameters'
compileTestJava.options.compilerArgs += '-parameters'
